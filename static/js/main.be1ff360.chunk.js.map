{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.jsx","actions.js","constants.js","containers/App.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchField","initialStateRequest","isPending","robots","error","Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","Robots","map","user","components_Card","key","Scroll","props","style","overflowY","height","padding","children","SearchBox","searchChange","aria-label","type","placeholder","onChange","ErrorBoundry","state","hasError","info","this","setState","Component","setRequestRobots","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","fetchedData","wrap","_context","prev","next","fetch","sent","json","payload","t0","stop","_x","apply","arguments","App","onSearchChange","evt","_this","searchfield","target","value","console","log","onRequestRobots","_this$props","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","e","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","logger","createLogger","rootReducer","combineReducers","length","undefined","action","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be1ff360.chunk.js","sourcesContent":["import {CHANGE_SEARCHFIELD, REQUEST_ROBOTS_FAILED, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_PENDING} from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch(action.type) {\n    case CHANGE_SEARCHFIELD :\n      return {...state, searchField: action.payload};\n\n    default :\n      return state;\n  }\n}\n\nconst initialStateRequest = {\n  isPending: false,\n  robots: [],\n  error: ''\n}\n\nexport const requestRobots = (state = initialStateRequest, action = {}) => {\n  switch(action.type) {\n    case REQUEST_ROBOTS_PENDING :\n      return {...state, isPending: true};\n    case REQUEST_ROBOTS_SUCCESS :\n      return {...state, robots: action.payload, isPending: false};\n    case REQUEST_ROBOTS_FAILED :\n      return {...state, error: action.payload};\n    default :\n      return state;\n  }\n}","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"bg-light-green dib-ns br2 pa3 ma2 tc grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"Robot\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ Robots }) => {\n  return (\n    <div>\n      {\n        Robots.map( user => <Card key={user.id} id={user.id} name={user.name} email={user.email} /> )\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflowY: 'scroll', height: '600px', padding: '5px' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search Robots\"\n        className=\"pa3 ba b--green bg-lightest-blue tc\"\n        type=\"search\"\n        id=\"searchBox\"\n        placeholder=\"search your robot\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    state = {\n        hasError: false\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    };\n\n    render() {\n        const { hasError } = this.state;\n        if (hasError) {\n            return (\n                <h1>Ooops. That is not good</h1>\n            )\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import {CHANGE_SEARCHFIELD, REQUEST_ROBOTS_FAILED, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_PENDING} from './constants';\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text\n})\n\nexport const setRequestRobots = async dispatch => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n\n  try {\n    const fetchedData = await ( await fetch('https://jsonplaceholder.typicode.com/users')).json();\n    dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: fetchedData }) \n  } catch (error) {\n    dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n  }\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'; \nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'; \nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'; ","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { setSearchField, setRequestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField : state.searchRobots.searchField,\n    isPending   : state.requestRobots.isPending,\n    robots      : state.requestRobots.robots,\n    error       : state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: e => dispatch(setSearchField(e.target.value)),\n    onRequestRobots: () => setRequestRobots(dispatch)\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    console.log(this.props)\n    this.props.onRequestRobots();\n  }\n\n  onSearchChange = (evt) => {\n    this.setState({ searchfield: evt.target.value });\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter( robot => robot.name.toLowerCase().includes(searchField.toLowerCase()) );\n    return isPending ?\n    <h1 className=\"tc pa4\">Loading</h1> :\n    (\n      <div className=\"tc\">\n        <h1 className=\"f1\">Robofriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList Robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  } // Render\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { searchRobots, requestRobots } from './reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(<Provider store={store}>\n                  <App />\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}